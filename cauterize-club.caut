(schema cauterize_club 0.0.1.0
  ;; Each network transmission starts with a network header. The header may be
  ;; followed by additional encoded types.
  (union message_header
    (fields
      (field control control)
      (field transport transport)))

  ;; Control types are used to maintain a network topology.
  (union control
    (fields
      ;; A list of peers to which the recipient may also be able to connect.
      ;; If more than the number of peers allowed in this type exist, multiple
      ;; `peer_list` messages can be sent.
      (field peer_list peer_vector)))

  ;; A vector of addresses representing peers.
  (vector peer_vector address 16)

  ;; Transport types are used to transmit information about time lines.
  (union transport
    (fields
      (field announce sha1hash)
      (field request sha1hash)
      (field query sha1hash)

      ;; This transport message, by protocol agreement, is immediately
      ;; followed by a (u32,entry) pair where the u32 describes the
      ;; length in bytes of the entry.
      (field send sha1hash)))



  ;; Top level entry type. Time lines are made out of entries.
  (record entry
    (fields
      ;; Where did this entry originate from?
      (field origin participant)

      ;; The time stamp of this entry. Should be nanoseconds since January 1,
      ;; 1970, UTC. This is recorded by the local machine's clock so it is only as
      ;; accurate as that machine's clock. It should not be used for ordering.
      (field timestamp u64)

      ;; The entry data.
      (field body entry_body)))


  ;; Messages are one of thee possible types.
  (union entry_body
    (fields
      (field beginning beginning)
      (field joiner joiner)
      (field content content)))


  ;; Entry that starts a new timeline. Does not come after any entry.
  (record beginning
    (fields
      ;; The name of this timeline.
      (field name name)))

  ;; Makes a reference hash to two separate entries. Mark two entries as
  ;; predecessors. This allows a participant with access to divergent time lines
  ;; to merge the time lines.
  (record joiner
    (fields
      ;; A hash of the encoded bytes of the first `entry` predecessor.
      (field first sha1hash)

      ;; A hash of the encoded bytes of the second `entry` predecessor.
      (field second sha1hash)))

  ;; Message content in the timeline.
  (record content
    (fields
      ;; Entry preceding this entry.
      (field predecessor sha1hash)

      ;; Actual content of the entry.
      (field payload payload)))

  ;; Participants are the originators of entries.
  (record participant
    (fields
      ;; The name of the participant.
      (field name name)))

  ;; SHA1 hashes are used as entry identifiers.
  (array sha1hash u8 20)


  ;; Names are up to 512 bytes. Should be encoded as UTF8.
  (vector name u8 512)

  ;; Addresses are up to 512 bytes. Supported address schemes are below:
  ;;
  ;;  - tcp = tcp:[hostname]:port
  (vector address u8 512)

  ;; The payload is up to 16K. The data is arbitrary.
  (vector payload u8 16384))
